[{"/Users/jacobthomas/Desktop/deep-stream-client/react/wsb-reader-sl/src/App.js":"1","/Users/jacobthomas/Desktop/deep-stream-client/react/wsb-reader-sl/src/components/Header.js":"2","/Users/jacobthomas/Desktop/deep-stream-client/react/wsb-reader-sl/src/index.js":"3","/Users/jacobthomas/Desktop/deep-stream-client/react/wsb-reader-sl/src/reportWebVitals.js":"4","/Users/jacobthomas/Desktop/deep-stream-client/react/wsb-reader-sl/src/components/ColumnItems.js":"5","/Users/jacobthomas/Desktop/deep-stream-client/react/wsb-reader-sl/src/components/ColumnItem.js":"6"},{"size":3939,"mtime":1612328583531,"results":"7","hashOfConfig":"8"},{"size":546,"mtime":1611959507000,"results":"9","hashOfConfig":"8"},{"size":547,"mtime":1611933684392,"results":"10","hashOfConfig":"8"},{"size":362,"mtime":1611933262820,"results":"11","hashOfConfig":"8"},{"size":669,"mtime":1612289028550,"results":"12","hashOfConfig":"8"},{"size":2567,"mtime":1612328444448,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1lfhv0r",{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/jacobthomas/Desktop/deep-stream-client/react/wsb-reader-sl/src/App.js",["29","30","31"],"/Users/jacobthomas/Desktop/deep-stream-client/react/wsb-reader-sl/src/components/Header.js",["32","33","34","35","36","37"],"import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavLink from 'react-bootstrap/NavLink';\nimport NavItem from 'react-bootstrap/NavItem';\n\nconst Header = () => (\n    <header>\n        <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n        <Navbar.Brand href=\"#\">Stonks Reader</Navbar.Brand>\n\n        </Navbar>\n    </header>\n);\n\nexport default Header;\n","/Users/jacobthomas/Desktop/deep-stream-client/react/wsb-reader-sl/src/index.js",[],"/Users/jacobthomas/Desktop/deep-stream-client/react/wsb-reader-sl/src/reportWebVitals.js",[],"/Users/jacobthomas/Desktop/deep-stream-client/react/wsb-reader-sl/src/components/ColumnItems.js",["38"],"import React, { Component, Fragment } from 'react';\nimport ColumnItem from './ColumnItem';\n\nimport './ColumnItems.css'\nimport ReactScrollToBottom from 'react-scroll-to-bottom';\nimport { FixedSizeList as List } from 'react-window';\n\nclass ColumnItems extends Component {\n\n    render() {\n        return (\n            <Fragment>\n                <h4>{this.props.title}</h4>\n                <ReactScrollToBottom className=\"column-items\">\n\n                    {this.props.items.map(item => { return <ColumnItem className=\"pb-2\" item={item} key={item.id} /> })}\n                </ReactScrollToBottom>\n            </Fragment>\n\n\n\n        );\n    }\n}\n\nexport default ColumnItems;\n","/Users/jacobthomas/Desktop/deep-stream-client/react/wsb-reader-sl/src/components/ColumnItem.js",["39","40"],"import React, { Component, Fragment, PureComponent } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport format from 'date-fns/format';\n\nclass ColumnItem extends PureComponent {\n  \n  componentDidMount() {\n  }\n\n  isMod(item) {\n    if (item.author.is_mod) {\n      return <span className=\"badge badge-primary\">MOD</span>;\n    } else {\n      return \"\";\n    }\n  }\n\n  isGold(item) {\n    if (item.author.is_gold) {\n      return <span className=\"badge badge-warning\">GOLD</span>;\n    } else {\n      return \"\";\n    }\n  }\n\n  getTickerElement(ticker) {\n    return <span className=\"badge badge-pill badge-dark float-right\" key={ticker}>{ticker.toUpperCase()}</span>\n  }\n  getTickers(item) {\n    const tickers = [];\n    for (const ticker of item.tickers) {\n      tickers.push(this.getTickerElement(ticker));\n    }\n    return tickers;\n  }\n\n  render() {\n    const item = this.props.item;\n    \n    \n    const created_utc = format(new Date(item.created_utc * 1000), \"HH:mm:ss\");\n\n    return (\n\n        <Fragment>\n          <Card className=\"mb-3 mx-3\" style={this.props.style}>\n            <Card.Header>\n              <small>\n                <Row>\n                  <Col md=\"7\">\n                    <h6>\n                      {item.author.name}\n                      <br />\n                      <span className=\"badge badge-success\">{item.author.comment_karma}\n                      </span>\n  \n                      {this.isMod(item)}\n                      {this.isGold(item)}\n                      <span className=\"badge badge-secondary\">1 hr post count - {item.author.one_hour_post_count}</span>\n                    </h6>\n                  </Col>\n                  <Col md=\"5\">\n                    Tickers:\n                  {this.getTickers(item)}\n                  </Col>\n  \n  \n                </Row>\n  \n  \n              </small>\n  \n  \n            </Card.Header>\n            <Card.Body>\n              {item.body}\n  \n  \n            </Card.Body>\n            <Card.Footer>\n              <small>\n                <Row>\n                  <Col>\n                    {created_utc}\n                  </Col>\n  \n                  <Col>\n                    <a href={\"https://www.reddit.com\" + item.permalink} className=\"float-right\" target=\"_blank\" rel=\"noreferrer\">link</a>\n                  </Col>\n                </Row>\n              </small>\n            </Card.Footer>\n          </Card>\n        </Fragment>\n  \n  \n    );\n  }\n\n}\n\nexport default ColumnItem;",{"ruleId":"41","severity":1,"message":"42","line":56,"column":64,"nodeType":"43","messageId":"44","endLine":56,"endColumn":66},{"ruleId":"41","severity":1,"message":"42","line":68,"column":66,"nodeType":"43","messageId":"44","endLine":68,"endColumn":68},{"ruleId":"41","severity":1,"message":"42","line":80,"column":64,"nodeType":"43","messageId":"44","endLine":80,"endColumn":66},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":17},{"ruleId":"45","severity":1,"message":"49","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":11},{"ruleId":"45","severity":1,"message":"50","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":11},{"ruleId":"45","severity":1,"message":"51","line":7,"column":8,"nodeType":"47","messageId":"48","endLine":7,"endColumn":11},{"ruleId":"45","severity":1,"message":"52","line":8,"column":8,"nodeType":"47","messageId":"48","endLine":8,"endColumn":15},{"ruleId":"45","severity":1,"message":"53","line":9,"column":8,"nodeType":"47","messageId":"48","endLine":9,"endColumn":15},{"ruleId":"45","severity":1,"message":"54","line":6,"column":27,"nodeType":"47","messageId":"48","endLine":6,"endColumn":31},{"ruleId":"45","severity":1,"message":"55","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},{"ruleId":"45","severity":1,"message":"56","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":15},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Nav' is defined but never used.","'NavLink' is defined but never used.","'NavItem' is defined but never used.","'List' is defined but never used.","'Component' is defined but never used.","'Tooltip' is defined but never used."]